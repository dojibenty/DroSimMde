/*
 * myDronesPositionsLogObservationComponent
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "myDronesPositionsLogObservationComponent.h"
#include <iostream>
using namespace std;

myDronesPositionsLogObservationComponent::myDronesPositionsLogObservationComponent(string filename, double aFrequency): LogComponent( filename, aFrequency){
	try{
        WriteFirstLine();
	}
	catch (exception &e) {cerr << "myDronesPositionsLogObservationComponent : " << e.what() << endl;}
}
myDronesPositionsLogObservationComponent::~myDronesPositionsLogObservationComponent(){}

void myDronesPositionsLogObservationComponent::readInputs() {
    instObjposX = theObjective->getObjposX();
    instObjposY = theObjective->getObjposY();
	}

void myDronesPositionsLogObservationComponent::WriteFirstLine() {
    string s = "time(ms)";
        s = s + ";" + "objposX";
        s = s + ";" + "objposY";
		writeNames( s);
		endLine();
	}

void myDronesPositionsLogObservationComponent::setObjective(Objective *myObjective) {
		theObjective = myObjective;
	}

void myDronesPositionsLogObservationComponent::doStep(int nStep) {
	Clock *c = Clock::getInstance();
	readInputs();
	//int i = 0;
    long t = c->getCurrentMS();
    string s = to_string( t) + ";";
		try{
			s = s + to_string(instObjposX) + ";";
		}
		catch (exception &e) {cerr << e.what() << endl;}

		try{
			s = s + to_string(instObjposY) + ";";
		}
		catch (exception &e) {cerr << e.what() << endl;}

		//on retire le dernier ";" separateur
		//s = s.substring(0, s.length() - 1);
        cout << "mySwimmerPositionLogObservationComponent::doStep : " << s << endl;
		writeNames( s);
		endLine();
    }

