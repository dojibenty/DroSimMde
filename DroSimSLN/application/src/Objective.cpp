/*
 * Objective.cpp
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "Objective.h"
#include "compObjective.h"
// Start of user code  : Additional imports for Objective
#include "Manager.h"
// End of user code


Objective::Objective(compObjective *container)	{
		myContainer = container;
		rItfEnvironmentObj = 0;
// Start of user code  : Implementation of constructor method

// End of user code
	}
Objective::~Objective(){
// Start of user code  : Implementation of destructor method

// End of user code
	}
void Objective::initialize() {
// Start of user code  : Implementation of initialize method
	direction = vect2(0,1.0);
// End of user code
	}

void Objective::end() {
// Start of user code  : Implementation of end method

// End of user code
	}

void Objective::doStep(int nStep) {
// Start of user code  : Implementation of doStep method
	if (speed == 0.0) return;
	
	vect2 nextPosition = position + direction * speed;
	
	if (nextPosition.getY() >= 0 && nextPosition.getY() <= YLimit) position = nextPosition;
	else direction.switchSignY();

	objposition = position;

	//cout << "OBJECTIVE: " << position.toString() << '\n';
// End of user code
	}
	
	
// Start of user code  : Additional methods
void Objective::lateinitialize() {
	vect2 envLimits = rItfEnvironmentObj->getEnvLimits();
	const double posX = Manager::rand_range(envLimits.getX() / 2, envLimits.getX());
	const double posY = Manager::rand_range(0, envLimits.getY());

	position = vect2(posX,posY);
	YLimit = envLimits.getY();
}
// End of user code
	

vect2 Objective::getObjposition() {
		return objposition;
	}
void Objective::setrItfEnvironmentObj(ItfEnvironmentInterface *arItfEnvironmentObj) {
		rItfEnvironmentObj = arItfEnvironmentObj;
	}
	// +++++++++++++ Access for speed parameter +++++++++++++
double Objective::getSpeed() {
		return speed;
	}
	
void Objective::setSpeed(double arg) {
		speed = arg;
	}
	// +++++++++++++ Access for position parameter +++++++++++++
vect2 Objective::getPosition() {
		return position;
	}
	
void Objective::setPosition(vect2 arg) {
		position = arg;
	}

