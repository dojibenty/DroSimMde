/*
 * DroneSpiral.h
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */
#ifndef DroneSpiral_H_
#define DroneSpiral_H_
#include "Clock.h"
class compDroneSpiral;
#include "vect2.h"
#include "vect2.h"

#include "ItfEnvironmentInterface.h"
#include "vect2.h"
#include "wect2.h"
#include "ItfTargetObjectInterface.h"

// Start of user code  : Additional imports for DroneSpiral
// End of user code

class DroneSpiral {

	protected :
              compDroneSpiral *myContainer;

	// Parameters
	          long ID;
	          double speed;
	          vect2 position;
	          vect2 direction;
	          double visionRadius;
	          double spiralRadius;
	          bool concentricCircles;
	          long nbCirclePoints;

	// Required Interfaces
	          ItfEnvironmentInterface *rItfEnvironmentSpiral;
	          ItfTargetObjectInterface *rItfTargetObjectSpiral;

// Start of user code  : Properties of DroneSpiral
// End of user code

	public :
            DroneSpiral(compDroneSpiral *container);
            ~DroneSpiral();
	        void initialize();
	       void end();

	       void doStep(int nStep) ;
	
	
// Start of user code  : Additional methods
// End of user code
	

	    void setrItfEnvironmentSpiral(ItfEnvironmentInterface *arItfEnvironmentSpiral);
	    void setrItfTargetObjectSpiral(ItfTargetObjectInterface *arItfTargetObjectSpiral);
	// +++++++++++++ Access for ID parameter +++++++++++++
	    long getID();
	
	    void setID(long arg);
	// +++++++++++++ Access for speed parameter +++++++++++++
	    double getSpeed();
	
	    void setSpeed(double arg);
	// +++++++++++++ Access for position parameter +++++++++++++
	    vect2 getPosition();
	
	    void setPosition(vect2 arg);
	// +++++++++++++ Access for direction parameter +++++++++++++
	    vect2 getDirection();
	
	    void setDirection(vect2 arg);
	// +++++++++++++ Access for visionRadius parameter +++++++++++++
	    double getVisionRadius();
	
	    void setVisionRadius(double arg);
	// +++++++++++++ Access for spiralRadius parameter +++++++++++++
	    double getSpiralRadius();
	
	    void setSpiralRadius(double arg);
	// +++++++++++++ Access for concentricCircles parameter +++++++++++++
	    bool getConcentricCircles();
	
	    void setConcentricCircles(bool arg);
	// +++++++++++++ Access for nbCirclePoints parameter +++++++++++++
	    long getNbCirclePoints();
	
	    void setNbCirclePoints(long arg);
};
#endif /*  DroneSpiral_H_ */
