/*
 * Environment.h
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */
#ifndef Environment_H_
#define Environment_H_
#include "Clock.h"
class compEnvironment;
#include "vect2.h"

#include "ItfEnvironmentInterface.h"
#include "vect2.h"
#include "wect2.h"

// Start of user code  : Additional imports for Environment
// End of user code

class Environment  : public ItfEnvironmentInterface {

	protected :
              compEnvironment *myContainer;

	// Parameters
	          vect2 envSize;
	          long maxInlineZones;
	          long sweepNumber;
	          long spiralNumber;


// Start of user code  : Properties of Environment
private:
	std::vector<wect2> Zones;
// End of user code

	public :
            Environment(compEnvironment *container);
            ~Environment();
	        void initialize();
	       void end();

	       void doStep(int nStep) ;
	
	// +++++++++++++ Methods of the pItfEnvironment interface +++++++++++++
	       vect2 getEnvLimits();

	       wect2 getAssignedZone(long ID);

	
// Start of user code  : Additional methods
private:
	std::vector<wect2> CreateZones();
public:
// End of user code
	

	// +++++++++++++ Access for envSize parameter +++++++++++++
	    vect2 getEnvSize();
	
	    void setEnvSize(vect2 arg);
	// +++++++++++++ Access for maxInlineZones parameter +++++++++++++
	    long getMaxInlineZones();
	
	    void setMaxInlineZones(long arg);
	// +++++++++++++ Access for sweepNumber parameter +++++++++++++
	    long getSweepNumber();
	
	    void setSweepNumber(long arg);
	// +++++++++++++ Access for spiralNumber parameter +++++++++++++
	    long getSpiralNumber();
	
	    void setSpiralNumber(long arg);
};
#endif /*  Environment_H_ */
