/*
 * compDroneSweep.h
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#ifndef compDroneSweep_H_
#define compDroneSweep_H_

#include "LeafComponent.h"
class DroneSweep;

#include "vect2.h"

#include "ItfGeoDataInterface.h"
#include "ItfWindForceInterface.h"
#include "ItfManageSimInterface.h"
#include "ItfSimDataInterface.h"

class compDroneSweep : public LeafComponent {
protected :
    /*pyp : inutile
        //inputs source
         LeafComponent ObjpositionSourceComponent;
         String portNameObjposition;
    */
    vect2 oldSweepposition;
    vect2 newSweepposition;

    bool newValue;
    int delay;


    DroneSweep* appli;

public :
    compDroneSweep(double aFrequency);
    virtual ~compDroneSweep();
    void doOneStep();
    void doStep(int nStep);

    virtual void readInputs();
    void initialize();
    void end();

    vect2 getSweepposition();
    void setrItfGeoDataSweep(ItfGeoDataInterface* arItfGeoDataSweep);
    void setrItfWindForceSweep(ItfWindForceInterface* arItfWindForceSweep);
    void setrItfManageSimSweep(ItfManageSimInterface* arItfManageSimSweep);
    void setrItfSimDataSweep(ItfSimDataInterface* arItfSimDataSweep);
    DroneSweep* getAppli();
    // +++++++++++++ Access for speedConstraint parameter +++++++++++++
    double getSpeedConstraint();

    void setSpeedConstraint(double arg);
    // +++++++++++++ Access for visionRadius parameter +++++++++++++
    double getVisionRadius();

    void setVisionRadius(double arg);
    // +++++++++++++ Access for sweepHeight parameter +++++++++++++
    double getSweepHeight();

    void setSweepHeight(double arg);
    // +++++++++++++ Access for batteryCapacity parameter +++++++++++++
    double getBatteryCapacity();

    void setBatteryCapacity(double arg);
};
#endif /* compDroneSweep_H_ */
