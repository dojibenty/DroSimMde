/*
 * User.cpp
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "compUser.h"
#include "User.h"

compUser::compUser(double aFrequency) : LeafComponent(aFrequency) {
    appli = new User(this);
    delay = 0;
    delayMax = 0;
    newValue = false;
    isActive = true;
}

compUser::~compUser() {}

void compUser::doOneStep() {
    if (newValue) {
        delay++;
        if (delay == delayMax) {}
    }
}

int compUser::doStep(int nStep) {
    if (newValue) {}
    readInputs();
    const int returnCode = appli->doStep(nStep);
    if (delayMax == 0) {
        newValue = false;
    }
    else {
        newValue = true;
        delay = 0;
    }
    return returnCode;
}

void compUser::readInputs() {}

void compUser::initialize() {
    appli->initialize();
}

void compUser::end() {
    appli->end();
}

// +++++++++++++ Methods of the pItfManageSimulation interface +++++++++++++
void compUser::signalObjectiveFound(long droneID) {
    appli->signalObjectiveFound(droneID);
}

User* compUser::getAppli() {
    return appli;
}
