/*
 * Objective.cpp
 *
 * Generated by Cares generator, written with Acceleo
 * Author: pyp
 */

#include "compObjective.h"
#include "Objective.h"
compObjective::compObjective(double aFrequency) : LeafComponent( aFrequency) {
		appli = new Objective( this);
		delay = 0;
		delayMax = 0;
		newValue = false;
		isActive = true;
	}
compObjective::~compObjective()	{}

void compObjective::doOneStep() {
		if (newValue) {
			delay++;
			if (delay == delayMax) {
			}
		}
	}

void compObjective::doStep(int nStep) {	
		if (newValue) {
		}
		readInputs();
		appli->doStep(nStep);
		if (delayMax == 0) {
			newValue = false;
		} else {
			newValue = true;
			delay = 0;
		}
	}

void compObjective::readInputs() {
	}
void compObjective::initialize() {
		appli->initialize();
	}

void compObjective::end() {
		appli->end();
	}
	
	// +++++++++++++ Methods of the pItfTargetObject interface +++++++++++++
bool compObjective::isObjectNear(){
		return appli->isObjectNear();
	}

Objective *compObjective::getAppli() {
		return appli;
	}
	// +++++++++++++ Access for speed parameter +++++++++++++
double compObjective::getSpeed() {
		return appli->getSpeed();
	}
	
void compObjective::setSpeed(double arg) {
		appli->setSpeed(arg);
	}
	// +++++++++++++ Access for position parameter +++++++++++++
vect2 compObjective::getPosition() {
		return appli->getPosition();
	}
	
void compObjective::setPosition(vect2 arg) {
		appli->setPosition(arg);
	}

